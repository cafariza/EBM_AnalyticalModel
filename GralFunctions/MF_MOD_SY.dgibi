
E  = 30000;
Nu1  = 0.2;
Rho1 = 2.3E-9;
lw=3000.;     								
lf=3000.;	
h=1000.;
************************************************************************
*            3DFRAMES   : Modeling Story: Structure "MULTI PORTIQUE"  *
*            -----------------------------------------                 *
************************************************************************
************************************************************************
*DATE: 20 NOV 2017
*modif: 04 03 2020 ENHENMENT PROPERTIES ASSIGMENT									  
*BY: CAROLINA FRANCO 								  
************************************************************************
*  TEST 1
*
*           NUMERICAL MODEL OF A 1-FRAME STORY
*             
*
* In this numerical model, the geometry of one story  	               *
* structure will be built up by using periodic boundary conditions.    *
* That means that some degrees of freedoms are going to be constrained * 
* to the same value. Transverse displacement at the top will be allowed* 
* As well as rotation and vertical displacement but guaranteeing the   *
* same for both ends.*

*Note: COMPUTATION MODEL TYPE >>> TRID >>>POUT

************************************************************************

*DEFINYING THE DIMENSION IN 2D SPACE AND THE TYPE OF GEOMETRY
*______________________________________________________________________*
*DEFINITION OF ONLY ONE STORY;
************************************************************************
OPTION ECHO 0 ; 
*FUNCTION TO CREATE THE GRID/ GRID;
DEBPROC GRID  inip*POINT  lf*FLOTTANT  lw*FLOTTANT  nw*ENTIER;
        TABLN        = TABLE;
		TABUN        = TABLE;
             REPE BOUCL nw;
			 TABLN. &BOUCL= table;
                  vectr1 = POIN ((&BOUCL-1.)*lf) 0.;
                  TABLN. &BOUCL . 1 = inip PLUS vectr1; 
             FIN BOUCL;
			 REPE BOUCUP nw;
			 TABUN. &BOUCUP= table;
                  vectr2 = ((&BOUCUP-1.)*lf) (lw);
                  TABUN. &BOUCUP . 1 = inip PLUS vectr2; 
             FIN BOUCUP;
FINPROC TABLN TABUN;

*FUNCTION TO DEFINE THE NODES AND ELEMENTS OF THE STORY WALLS;
DEBPROC WALLS TABLN*TABLE TABUN*TABLE ;			
		 
		nx = DIME TABLN;
        ny = DIME (TABLN. 1);
        TABW = TABLE;
        REPE BOUCX nx ;
             TABW. &BOUCX = TABLE;
             REPE BOUCY ny;
                  POILN = TABLN. &BOUCX . &BOUCY;
                  POIUN = TABUN. &BOUCX . &BOUCY;
                  ELE  = MANU SEG2 POILN POIUN turq;
                  TABW. &BOUCX . &BOUCY = ELE;
                  SI ((&BOUCX*&BOUCY) 'EGA' 1);
                      MAILW = ELE;
                  SINON;
                      MAILW = MAILW ET ELE;
                  FINSI;
             FIN BOUCY;
        FIN BOUCX;
FINPROC TABW MAILW;

*FUNCTION TO DEFINE THE NODES AND ELEMENTS OF THE STORY FLOORS;
DEBPROC FLOORS TABUN*TABLE;

		npx = (DIME TABUN) - 1;
        TABFX = TABLE;
        REPE BOUCX npx ;
             TABFX. &BOUCX = TABLE;
                  POINL = TABUN. &BOUCX . 1;
                  POINR = TABUN. (&BOUCX+1) . 1;
                  FLOORX = MANU SEG2 POINL POINR ROSE;
                  SI (&BOUCX 'EGA' 1);
                      MAILF = FLOORX;
                  SINON;
                      MAILF = MAILF ET FLOORX;
                  FINSI;
                  TABFX. &BOUCX . 1 = FLOORX;
         FIN BOUCX; 
FINPROC TABFX MAILF;

*FUNCTION TO DEFINE THE NODES AND ELEMENTS OF THE ALL THE STORIES;
DEBPROC STRUCT inip*POINT lf*FLOTTANT lw*FLOTTANT nw*ENTIER   N*ENTIER; 
        TABSTRUC     = TABLE;
        TABSTRUC.WAL = TABLE;
        TABSTRUC.FLO = TABLE;
		REPE BOUCN N;
			 UPi = POIN 0. ((&BOUCN-1)*lw);
			 inipi= inip PLUS UPi;
			 TABLNi1 TABUNi1 = GRID inipi lf lw nw;
             WALLPi  MAILWi = WALLS TABLNi1 TABUNi1;
             FLOORPi MAILFi = FLOORS TABUNi1;
             TABSTRUC.WAL.&BOUCN = wallpi;
             TABSTRUC.FLO.&BOUCN = floorpi;
             SI (&BOUCN 'EGA' 1);
                MESHSTRU = MAILWi ET MAILFi;
             SINON;
                MESHSTRU = MESHSTRU ET MAILWi ET MAILFi;              
             FINSI; 
        FIN BOUCN;  
FINPROC TABSTRUC MESHSTRU;

*...................................................................*
*          COMPUTATION FILE                                         *
*...................................................................*

OPTI 'DIME' 2 'ELEM' 'SEG2' MODE TRID ;
OPTI EPSI LINEAIRE;
OPTI TRAC X;

*LENGTHS AND MESH DENSITY DEFINITION;
								
							
ni=lw*N;	
dens1 = 0.01;
dens dens1;						

inip= POIN 0. 0.;	


TABSTRUC MESHSTRU = STRUCT inip lf lw nw N; 

* Elimination OF SUPERPOSED POINTS
* -----------
elim MESHSTRU 1.E-4;


*TRAC (MESHSTRU ) 'TITR' '[0] STRCUTURAL MODEL';

*ELEMENTS RECOVERY;
PO=0.;
P2= (nw-1)*lf;
POi= PO 0.;
POf= PO ni;
P2i= P2 0.;
P2f= P2 ni;
PWO= MESHSTRU POIN 'DROI' POi POf 0.00000001;
PW2= MESHSTRU POIN 'DROI' P2i P2f 0.00000001;
MAILW1O= MESHSTRU ELEM 'APPU' 'STRI' PWO;
MAILW12= MESHSTRU ELEM 'APPU' 'STRI' PW2;


BOOL1= (nw 'EGA' 2);
BOOL2= (nw 'EGA' 3);

REPE BOUCN N;

SI BOOL2;
SI (&BOUCN 'EGA' 1);
MAILF1= (TABSTRUC.FLO . &BOUCN . 1 . 1);
SINON;
MAILF1= (TABSTRUC.FLO . &BOUCN . 1 . 1) ET MAILF1;
FINSI;
SINON;
SI (&BOUCN 'EGA' 1);
MAILF1=(TABSTRUC.FLO . 1 . (nw-1) . 1) ET (TABSTRUC.FLO . 1 . 1 . 1);
SINON;
MF1=(TABSTRUC.FLO. &BOUCN . 1 . 1);
MF2= (TABSTRUC.FLO. &BOUCN . (nw-1). 1);
MAILF1=  MF1 ET MF2 ET MAILF1 ;
FINSI;
FINSI;
ELIM MAILF1 1.E-4;
FIN BOUCN;


*IF THERE ARE DIFFERENT PROPERTIES BETWEEN INNER AND OUTER ELEMENTS

SI BOOL1;
MAILW1= MAILW1O;
MAILF1=MESHSTRU ELEM ROSE;
MAILW2= MESHSTRU ELEM TURQ;
MAILW2= DIFF MAILW2 MAILW1 COULEUR ROSE;
MESHSTRU=MAILW1 ET MAILW2 ET MAILF1;
ELIM MESHSTRU 1.E-4;
SINON;
    SI BOOL2;
    MAILW1= MAILW1O ET MAILW12;
    MAILW2= MESHSTRU ELEM TURQ;
    MAILW2= DIFF MAILW2 MAILW1 COULEUR ROSE;
    MAILF2=  MESHSTRU ELEM ROSE;
    MAILF2=  DIFF MAILF2 MAILF1 COULEUR TURQ;

   SINON;
      MAILW1= MAILW1O ET MAILW12;
      MAILW2= MESHSTRU ELEM TURQ;
   MAILW2= DIFF MAILW2 MAILW1 COULEUR ROSE;
   MAILF2=  MESHSTRU ELEM ROSE;
   MAILF2=  DIFF MAILF2 MAILF1 COULEUR TURQ;
   FINSI;
MESHSTRU=MAILW1 ET MAILW2 ET MAILF1 ET MAILF2;
ELIM MESHSTRU 1.E-4;
FINSI;

*BOUNDARY CONDITION POINTS RECOVERY 	(Points at Y=0 and Y=lw);
Y=0.;
Pbase1 = 0. Y;
Pbase2 = 1. Y;


MAILBCb = MESHSTRU POIN 'DROIT' Pbase1 Pbase2 0.000000001;



*TRAC (MESHSTRU ET MAILBCb) 'TITR' '[1] STRCUTURAL MODEL';
*TRAC (MAILF1) 'TITR' '[2] STRCUTURAL MODEL';
*list MAILW1;
*list mailw2;
*LIST MESHSTRU;

*...................................................................*
*          Structural Behavior Definition                           *
*...................................................................*
* Properties
* -------------------------------


Arw1   = aw1*h;
Arw2   = aw2*h;
Arf1= af1*h;
Arf2= af2*h;
IZw1  = h*(aw1**3)/12;
IZw2  = h*(aw2**3)/12;
IZf1  = h*(af1**3)/12;
IZf2  = h*(af2**3)/12;
IYw1  = aw1*(h**3)/12;
IYw2  = aw2*(h**3)/12;
IYf1  = af1*(h**3)/12;
IYf2  = af2*(h**3)/12;
tor1=Iyw1+Izw1;
tor2=Iyw2+Izw2;
tor3=Iyf1+Izf1;
tor4=Iyf2+Izf2;



* MODEL TYPE DEFINITION
* --------------------
*MODEL
OPTI DIME 2 ELEM SEG2 MODE TRID;

MOD1 = MODEL MAILW1 MECANIQUE ELASTIQUE ISOTROPE POUT ;
MOD2 = MODEL MAILW2 MECANIQUE ELASTIQUE ISOTROPE POUT ;
MOD3 = MODEL MAILF1 MECANIQUE ELASTIQUE ISOTROPE POUT ;


SI BOOL1;
MODSTRU= mod1 et mod2 et mod3;
SINON;
MOD4 = MODEL MAILF2 MECANIQUE ELASTIQUE ISOTROPE POUT ;
MODSTRU= mod1 et mod2 et mod3 et mod4;
FINSI;




* MATERIAL TYPE DEFINITION
* --------------------
*CONCRETE
MAT1 = MATE MOD1 'YOUN' E 'NU' Nu1 'RHO ' Rho1;
MAT2 = MATE MOD2 'YOUN' E 'NU' Nu1 'RHO ' Rho1;
MAT3 = MATE MOD3 'YOUN' E 'NU' Nu1 'RHO ' Rho1;



SI BOOL1;
MATSTRUC= MAT1 et MAT2 et MAT3;
SINON;
MAT4 = MATE MOD4 'YOUN' E 'NU' Nu1 'RHO ' Rho1;
MATSTRUC= MAT1 et MAT2 et MAT3 et MAT4;
FINSI;

* GEOMETRY DEFINITION
* --------------------
*WALLS AND FLOORS
CASTRU1 = CARA MOD1 'SECT' Arw1 'INRY' Iyw1 'INRZ' Izw1 'TORS' tor1 ;
CASTRU2 = CARA MOD2 'SECT' Arw2 'INRY' Iyw2 'INRZ' Izw2 'TORS' tor2;
CASTRU3 = CARA MOD3 'SECT' Arf1  'INRY' Iyf1 'INRZ' Izf1 'TORS' tor3;



SI BOOL1;
CASTRUC= CASTRU1 ET CASTRU2 ET CASTRU3;
SINON;
CASTRU4 = CARA MOD4 'SECT' Arf2  'INRY' Iyf2 'INRZ' Izf2 'TORS' tor4;
CASTRUC= CASTRU1 ET CASTRU2 ET CASTRU3 et CASTRU4;
FINSI;


PROSTRUC = MATSTRUC ET CASTRUC;


*.......................................................................*
*                  RESTRAINTS DEFINITION                                *
*.......................................................................*

* Restraints Conditions 
* -------------------------------------------------
BDISP = BLOQ MAILBCb 'DEPL' 'ROTA';

BLO1= BLOQ MESHSTRU 'UZ' 'RX' 'RY';

CONST= BDISP ET BLO1;



*.......................................................................*
*                  MECHANICAL COMPUTATIONS                              *
*.......................................................................*

* Mass and Stiffness Matrices
* --------------------------------------------------------------
RIGSTRU = RIGI MODSTRU PROSTRUC;
MASSTRU = MASS MODSTRU PROSTRUC;

* Global Stiffness Matrix
* -------------------------------------------------------------
RIGTOT  = RIGSTRU ET CONST; 

*.......................................................................*
*                    Modal Analysis of the structure                    *
*.......................................................................*

* Plage de frequence analyse modale
* ---------------------------------
fmin = 0.01;
fmax = 40;


* Analyse modale
* --------------
TABMOD = VIBR INTERVALLE fmin fmax BASSE 4 RIGTOT MASSTRU IMPR TBAS;

* Recuperation des infos sur les modes
* ------------------------------------
VAR1 = TABMOD.MODES;
VAR0 = VAR1. 'MAILLAGE';
FREQ1=table; DEMO1=table;STRESS=table;UX1=table;
UY1=table; RZ1=table;

* Boucle sur les modes
* --------------------
nmod = (DIME VAR1) - 2 ;

REPE BOUC nmod;
     nummod1 = VAR1 . &BOUC . NUMERO_MODE;

* Recuperation de la frequence propre
* -----------------------------------
     FREQ1.&BOUC = VAR1 . &BOUC . FREQUENCE;
     
* Trace de la deforme modale
* --------------------------
     DEMO1. &BOUC = VAR1 . &BOUC . DEFORMEE_MODALE;
	 STRAI=EPSI  MODSTRU DEMO1. &BOUC PROSTRUC ;
	 STRESS. &BOUC=ELAS STRAI MODSTRU PROSTRUC;
     UX1. &BOUC= EXCO 'UX' DEMO1. &BOUC;
     UY1. &BOUC= EXCO 'UY' DEMO1. &BOUC;
     RZ1. &BOUC= EXCO 'RZ' DEMO1. &BOUC;
     DEF1  = DEFO VAR0 DEMO1. &BOUC roug;
     DEF1B = DEFO VAR0 DEMO1. &BOUC 0.0 ;
     
FIN BOUC;
LIST FREQ1;
*trac(DEF1 ET DEF1B);
IFN1=table; IFN2=table;
REPE BOUC nmod;
    IFN1 . &BOUC= CHAN 'CHPO' (redu (stress . &BOUC) MAILW1) MOD1;
    IFN2 . &BOUC= CHAN 'CHPO' (redu (stress . &BOUC) MAILW2) MOD2;
    
FIN BOUC;

OPTI 'SORT' 'FREQ1.inp';
SORT 'CHAI' FREQ1.1;
OPTI 'SORT' 'FREQ2.inp';
SORT 'CHAI' FREQ1.2;
OPTI 'SORT' 'FREQ3.inp';
SORT 'CHAI' FREQ1.3;
OPTI 'SORT' 'FREQ4.inp';
SORT 'CHAI' FREQ1.4;


OPTI 'SORT' 'IFN1MOD1.inp';
SORT 'AVS' IFN1.1;
OPTI 'SORT' 'IFN1MOD2.inp';
SORT 'AVS' IFN1.2;
OPTI 'SORT' 'IFN1MOD3.inp';
SORT 'AVS' IFN1.3;
OPTI 'SORT' 'IFN2MOD1.inp';
SORT 'AVS' IFN2.1;
OPTI 'SORT' 'IFN2MOD2.inp';
SORT 'AVS' IFN2.2;
OPTI 'SORT' 'IFN2MOD3.inp';
SORT 'AVS' IFN2.3;


OPTI 'SORT' 'DISPT1.inp';
SORT 'AVS' UX1.1;
OPTI 'SORT' 'DISPT2.inp';
SORT 'AVS' UX1.2;
OPTI 'SORT' 'DISPT3.inp';
SORT 'AVS' UX1.3;
OPTI 'SORT' 'DISPV1.inp';
SORT 'AVS' UY1.1;
OPTI 'SORT' 'DISPV2.inp';
SORT 'AVS' UY1.2;
OPTI 'SORT' 'DISPV3.inp';
SORT 'AVS' UY1.3;

OPTI 'SORT' 'ROT1.inp';
SORT 'AVS' RZ1.1;
OPTI 'SORT' 'ROT2.inp';
SORT 'AVS' RZ1.2;
OPTI 'SORT' 'ROT3.inp';
SORT 'AVS' RZ1.3;

OPTI 'SAUV' 'modalinf.sauv';
SAUV ;
FIN;

